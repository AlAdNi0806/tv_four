version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_DB: monitoring_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - monitoring-network

  # Adminer for database management
  adminer:
    image: adminer:latest
    container_name: adminer
    ports:
      - "8080:8080"
    networks:
      - monitoring-network
    depends_on:
      - postgres

  # Spring Boot Application
  app:
    build: ./app
    container_name: spring_app
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/monitoring_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password123
      GRAYLOG_HOST: graylog
      GRAYLOG_PORT: 12201
    ports:
      - "8090:8090"
    networks:
      - monitoring-network
    depends_on:
      - postgres
      - graylog

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    networks:
      - monitoring-network

  # Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin123
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
    networks:
      - monitoring-network
    depends_on:
      - prometheus

  # PostgreSQL Exporter for Prometheus
  postgres_exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: postgres_exporter
    environment:
      DATA_SOURCE_NAME: postgresql://postgres:password123@postgres:5432/monitoring_db?sslmode=disable
    ports:
      - "9187:9187"
    networks:
      - monitoring-network
    depends_on:
      - postgres

  # MongoDB for Graylog
  mongodb:
    image: mongo:5.0
    container_name: mongodb
    volumes:
      - mongodb_data:/data/db
    networks:
      - monitoring-network

  # Elasticsearch for Graylog
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.2
    container_name: elasticsearch
    environment:
      - http.host=0.0.0.0
      - transport.host=localhost
      - network.host=0.0.0.0
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - monitoring-network

  # Graylog
  graylog:
    image: graylog/graylog:5.0
    container_name: graylog
    environment:
      GRAYLOG_PASSWORD_SECRET: somepasswordpepper
      GRAYLOG_ROOT_PASSWORD_SHA2: 8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918
      GRAYLOG_HTTP_EXTERNAL_URI: http://127.0.0.1:9000/
    entrypoint: /usr/bin/tini -- wait-for-it elasticsearch:9200 --  /docker-entrypoint.sh
    networks:
      - monitoring-network
    restart: always
    depends_on:
      - mongodb
      - elasticsearch
    ports:
      - "9000:9000"
      - "12201:12201/udp"
    volumes:
      - graylog_data:/usr/share/graylog/data

  # Zabbix Server
  zabbix-server:
    image: zabbix/zabbix-server-pgsql:alpine-6.4-latest
    container_name: zabbix-server
    environment:
      DB_SERVER_HOST: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
      POSTGRES_DB: zabbix
    networks:
      - monitoring-network
    depends_on:
      - postgres

  # Zabbix Web Interface
  zabbix-web:
    image: zabbix/zabbix-web-nginx-pgsql:alpine-6.4-latest
    container_name: zabbix-web
    environment:
      ZBX_SERVER_HOST: zabbix-server
      DB_SERVER_HOST: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
      POSTGRES_DB: zabbix
    ports:
      - "8081:8080"
    networks:
      - monitoring-network
    depends_on:
      - zabbix-server

  # Zabbix Agent
  zabbix-agent:
    image: zabbix/zabbix-agent:alpine-6.4-latest
    container_name: zabbix-agent
    environment:
      ZBX_HOSTNAME: "monitoring-host"
      ZBX_SERVER_HOST: zabbix-server
    networks:
      - monitoring-network
    depends_on:
      - zabbix-server

volumes:
  postgres_data:
  prometheus_data:
  grafana_data:
  mongodb_data:
  elasticsearch_data:
  graylog_data:


networks:
  monitoring-network:
    driver: bridge
